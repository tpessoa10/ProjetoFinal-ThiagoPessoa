// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoFinal_ThiagoPessoa.Models;

#nullable disable

namespace ProjetoFinal_ThiagoPessoa.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20231214222949_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ProjetoFinal_ThiagoPessoa.Models.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("ProjetoFinal_ThiagoPessoa.Models.Item", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("notaDeVendaId")
                        .HasColumnType("int");

                    b.Property<int>("percentual")
                        .HasColumnType("int");

                    b.Property<double>("preco")
                        .HasColumnType("double");

                    b.Property<int>("produtoid")
                        .HasColumnType("int");

                    b.Property<int>("quantidade")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("notaDeVendaId");

                    b.HasIndex("produtoid");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("ProjetoFinal_ThiagoPessoa.Models.Marca", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("ProjetoFinal_ThiagoPessoa.Models.NotaDeVenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Tipo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TipoDePagamentoId")
                        .HasColumnType("int");

                    b.Property<int?>("TransportadoraId")
                        .HasColumnType("int");

                    b.Property<int>("VendedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("TipoDePagamentoId");

                    b.HasIndex("TransportadoraId");

                    b.HasIndex("VendedorId");

                    b.ToTable("NotaDeVenda");
                });

            modelBuilder.Entity("ProjetoFinal_ThiagoPessoa.Models.Pagamento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("dataLimite")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("notaDeVendaId")
                        .HasColumnType("int");

                    b.Property<bool>("pago")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("valor")
                        .HasColumnType("double");

                    b.HasKey("id");

                    b.HasIndex("notaDeVendaId");

                    b.ToTable("Pagamento");
                });

            modelBuilder.Entity("ProjetoFinal_ThiagoPessoa.Models.Produto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("marcaid")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("preco")
                        .HasColumnType("double");

                    b.Property<int>("quantidade")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("marcaid");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("ProjetoFinal_ThiagoPessoa.Models.TipoDePagamento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("informacoesAdicionais")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nomeDoCobrado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("TipoDePagamento");
                });

            modelBuilder.Entity("ProjetoFinal_ThiagoPessoa.Models.Transportadora", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Transportadora");
                });

            modelBuilder.Entity("ProjetoFinal_ThiagoPessoa.Models.Vendedor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Vendedor");
                });

            modelBuilder.Entity("ProjetoFinal_ThiagoPessoa.Models.Item", b =>
                {
                    b.HasOne("ProjetoFinal_ThiagoPessoa.Models.NotaDeVenda", "notaDeVenda")
                        .WithMany("Itens")
                        .HasForeignKey("notaDeVendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoFinal_ThiagoPessoa.Models.Produto", "produto")
                        .WithMany("itens")
                        .HasForeignKey("produtoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("notaDeVenda");

                    b.Navigation("produto");
                });

            modelBuilder.Entity("ProjetoFinal_ThiagoPessoa.Models.NotaDeVenda", b =>
                {
                    b.HasOne("ProjetoFinal_ThiagoPessoa.Models.Cliente", "Cliente")
                        .WithMany("notaDeVendas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoFinal_ThiagoPessoa.Models.TipoDePagamento", "TipoDePagamento")
                        .WithMany("notaDeVenda")
                        .HasForeignKey("TipoDePagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoFinal_ThiagoPessoa.Models.Transportadora", "Transportadora")
                        .WithMany("notaDeVendas")
                        .HasForeignKey("TransportadoraId");

                    b.HasOne("ProjetoFinal_ThiagoPessoa.Models.Vendedor", "Vendedor")
                        .WithMany("notaDeVendas")
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("TipoDePagamento");

                    b.Navigation("Transportadora");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("ProjetoFinal_ThiagoPessoa.Models.Pagamento", b =>
                {
                    b.HasOne("ProjetoFinal_ThiagoPessoa.Models.NotaDeVenda", "notaDeVenda")
                        .WithMany("Pagamentos")
                        .HasForeignKey("notaDeVendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("notaDeVenda");
                });

            modelBuilder.Entity("ProjetoFinal_ThiagoPessoa.Models.Produto", b =>
                {
                    b.HasOne("ProjetoFinal_ThiagoPessoa.Models.Marca", "marca")
                        .WithMany("produtos")
                        .HasForeignKey("marcaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("marca");
                });

            modelBuilder.Entity("ProjetoFinal_ThiagoPessoa.Models.Cliente", b =>
                {
                    b.Navigation("notaDeVendas");
                });

            modelBuilder.Entity("ProjetoFinal_ThiagoPessoa.Models.Marca", b =>
                {
                    b.Navigation("produtos");
                });

            modelBuilder.Entity("ProjetoFinal_ThiagoPessoa.Models.NotaDeVenda", b =>
                {
                    b.Navigation("Itens");

                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("ProjetoFinal_ThiagoPessoa.Models.Produto", b =>
                {
                    b.Navigation("itens");
                });

            modelBuilder.Entity("ProjetoFinal_ThiagoPessoa.Models.TipoDePagamento", b =>
                {
                    b.Navigation("notaDeVenda");
                });

            modelBuilder.Entity("ProjetoFinal_ThiagoPessoa.Models.Transportadora", b =>
                {
                    b.Navigation("notaDeVendas");
                });

            modelBuilder.Entity("ProjetoFinal_ThiagoPessoa.Models.Vendedor", b =>
                {
                    b.Navigation("notaDeVendas");
                });
#pragma warning restore 612, 618
        }
    }
}
